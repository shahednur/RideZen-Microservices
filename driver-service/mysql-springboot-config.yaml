# MySQL Configuration
---
# ConfigMap for MySQL Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: default
data:
  my.cnf: |
    [mysqld]
    default-authentication-plugin=mysql_native_password
    bind-address=0.0.0.0
    port=3306
    max_connections=200
    innodb_buffer_pool_size=128M
    innodb_log_file_size=32M
    innodb_flush_log_at_trx_commit=1
    innodb_flush_method=O_DIRECT
    slow_query_log=1
    long_query_time=2
    general_log=0
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci
    
---
# Secret for MySQL credentials
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: default
type: Opaque
data:
  # root password: rootpassword (base64 encoded)
  mysql-root-password: cm9vdHBhc3N3b3Jk
  # database name: driverdb (base64 encoded)
  mysql-database: ZHJpdmVyZGI=
  # username: driveruser (base64 encoded)
  mysql-user: ZHJpdmVydXNlcg==
  # user password: driverpass (base64 encoded)
  mysql-password: ZHJpdmVycGFzcw==

---
# PersistentVolume for MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    app: mysql
spec:
  capacity:
    storage: 512Mi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /var/lib/mysql-data
    type: DirectoryOrCreate

---
# PersistentVolumeClaim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
  storageClassName: manual
  selector:
    matchLabels:
      app: mysql

---
# MySQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: default
  labels:
    app: mysql
spec:
  serviceName: mysql-headless
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-config-volume
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysql
            - -h
            - localhost
            - -u
            - root
            - -p$MYSQL_ROOT_PASSWORD
            - -e
            - "SELECT 1"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-config-volume
        configMap:
          name: mysql-config

---
# MySQL Headless Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: default
  labels:
    app: mysql
spec:
  clusterIP: None
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql

---
# MySQL ClusterIP Service (for application connectivity)
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: default
  labels:
    app: mysql
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql

---
# Spring Boot Driver Service Configuration
---
# ConfigMap for Spring Boot application properties
apiVersion: v1
kind: ConfigMap
metadata:
  name: driver-service-config
  namespace: default
data:
  application.yml: |
    spring:
      datasource:
        url: jdbc:mysql://mysql-service:3306/driverdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
        username: driveruser
        password: driverpass
        driver-class-name: com.mysql.cj.jdbc.Driver
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: true
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
            format_sql: true
    server:
      port: 8080
    logging:
      level:
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Driver Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: driver-service
  namespace: default
  labels:
    app: driver-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: driver-service
  template:
    metadata:
      labels:
        app: driver-service
    spec:
      containers:
      - name: driver-service
        image: driver-service:latest  
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql-service:3306/driverdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: driver-service-config
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until nc -z mysql-service 3306; do
            echo "MySQL not ready, waiting..."
            sleep 5
          done
          echo "MySQL is ready!"

---
# Driver Service ClusterIP Service
apiVersion: v1
kind: Service
metadata:
  name: driver-service
  namespace: default
  labels:
    app: driver-service
spec:
  type: ClusterIP
  selector:
    app: driver-service
  ports:
  - port: 80
    targetPort: 8080
    name: http

---
# Optional: NodePort Service for external access during development
apiVersion: v1
kind: Service
metadata:
  name: driver-service-nodeport
  namespace: default
  labels:
    app: driver-service
spec:
  type: NodePort
  selector:
    app: driver-service
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30000
    name: http